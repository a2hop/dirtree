name: Build and Release

on:
  release:
    types: [created, published]
  push:
    branches: [main]
    paths:
      - 'dirtree.c'
      - 'Makefile'
      - '.github/workflows/build_and_release.yml'
  workflow_dispatch:
    inputs:
      publish_binaries:
        description: 'Publish binaries to release'
        required: true
        default: true
        type: boolean

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc make mingw-w64
      
      - name: Build Linux executable
        run: |
          make clean
          make
      
      - name: Build Windows executable
        run: |
          x86_64-w64-mingw32-gcc -o dirtree.exe dirtree.c -static
      
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: dirtree-linux
          path: dirtree
      
      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: dirtree-windows
          path: dirtree.exe
  
  release-binaries:
    needs: build-linux
    # Fixed condition to correctly access the input variable
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_binaries == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: dirtree-linux
          path: ./
      
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: dirtree-windows
          path: ./
      
      - name: Set executable permissions
        run: chmod +x dirtree
      
      - name: Create ZIP archive
        run: |
          zip dirtree-linux.zip dirtree
          zip dirtree-windows.zip dirtree.exe
      
      - name: Get latest release
        if: github.event_name == 'workflow_dispatch'
        id: latest_release
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const releases = await github.rest.repos.listReleases({
                owner: context.repo.owner,
                repo: context.repo.repo
              });
              
              if (releases.data.length === 0) {
                core.setOutput('has_release', 'false');
                return null;
              }
              
              core.setOutput('has_release', 'true');
              core.setOutput('latest_tag', releases.data[0].tag_name);
              return releases.data[0].id;
            } catch (error) {
              core.setFailed(`Error getting releases: ${error.message}`);
              return null;
            }
          result-encoding: string

      - name: Create Release if None Exists
        if: github.event_name == 'workflow_dispatch' && steps.latest_release.outputs.has_release != 'true'
        id: create_release
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              const response = await github.rest.repos.createRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: 'latest',
                name: 'Latest Build',
                body: 'Automatically created release for latest build',
                draft: false,
                prerelease: false
              });
              
              return response.data.tag_name;
            } catch (error) {
              core.setFailed(`Error creating release: ${error.message}`);
              return null;
            }

      - name: Upload to existing release
        if: github.event_name == 'workflow_dispatch' && steps.latest_release.outputs.has_release == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dirtree-linux.zip
            dirtree-windows.zip
          tag_name: ${{ steps.latest_release.outputs.latest_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload to new release
        if: github.event_name == 'workflow_dispatch' && steps.latest_release.outputs.has_release != 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dirtree-linux.zip
            dirtree-windows.zip
          tag_name: ${{ steps.create_release.outputs.result || 'latest' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload to current release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dirtree-linux.zip
            dirtree-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Debugging job to help diagnose issues
  debug-info:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      
      - name: Display event name and inputs
        run: |
          echo "Event name is ${{ github.event_name }}"
          echo "Event type is ${{ github.event.type || 'not set' }}"
          echo "Workflow dispatch inputs: ${{ toJson(github.event.inputs) }}"
          echo "Publish binaries input is ${{ github.event.inputs.publish_binaries || 'not set' }}"
